{"changed":true,"filter":false,"title":"part1_spec.rb","tooltip":"/spec/part1_spec.rb","value":"require 'ruby_intro.rb'\n\ndescribe 'Ruby intro part 1' do\n\n  describe \"#sum\" do\n    it \"should be defined\" do\n      expect { sum([1,3,4]) }.not_to raise_error\n    end\n\n    it \"returns correct sum [20 points]\" , points: 20 do\n      expect(sum([1,2,3,4,5])).to be_a_kind_of Fixnum\n      expect(sum([1,2,3,4,5])).to eq(15)\n      expect(sum([1,2,3,4,-5])).to eq(5)\n      expect(sum([1,2,3,4,-5,5,-100])).to eq(-90)\n    end\n\n    it \"works on the empty array [10 points]\" , points: 10 do\n      expect { sum([]) }.not_to raise_error\n      expect(sum([])).to be_zero\n    end\n  end\n\n  describe \"#max_2_sum\" do\n    it \"should be defined\" do\n      expect { max_2_sum([1,2,3]) }.not_to raise_error\n    end\n    it \"returns the correct sum [7 points]\" , points: 7 do\n      expect(max_2_sum([1,2,3,4,5])).to be_a_kind_of Fixnum\n      expect(max_2_sum([1,-2,-3,-4,-5])).to eq(-1)\n    end\n    it 'works even if 2 largest values are the same [3 points]' , points: 3 do\n      expect(max_2_sum([1,2,3,3])).to eq(6)\n    end\n    it \"returns zero if array is empty [10 points]\" , points: 10 do\n      expect(max_2_sum([])).to be_zero\n    end\n    it \"returns value of the element if just one element [10 points]\" , points: 10 do\n      expect(max_2_sum([3])).to eq(3)\n    end\n  end\n\n  describe \"#sum_to_n\" do\n    it \"should be defined\" do\n      expect { sum_to_n?([1,2,3],4) }.not_to raise_error\n    end\n    it \"returns true when any two elements sum to the second argument [30 points]\" , points: 30 do\n      expect(sum_to_n?([1,2,3,4,5], 5)).to be true        # 2 + 3 = 5\n      expect(sum_to_n?([3,0,5], 5)).to be true            # 0 + 5 = 5\n      expect(sum_to_n?([-1,-2,3,4,5,-8], -3)).to be true  # handles negative sum\n      expect(sum_to_n?([-1,-2,3,4,5,-8], 12)).to be false # 3 + 4 + 5 = 12 (not 3 elements)\n      expect(sum_to_n?([-1,-2,3,4,6,-8], 12)).to be false # no two elements that sum\n    end\n    #    for rspec 2.14.1\n    # it \"returns false for the single element array [5 points]\" , points: 5 do\n    #   sum_to_n?([1], 1).should be_false\n    #   sum_to_n?([3], 0).should be_false\n    # end\n    # it \"returns false for the empty array [5 points]\" , points: 5 do\n    #   sum_to_n?([], 0).should be_false\n    #   sum_to_n?([], 7).should be_false\n    # end\n    it \"returns false for any single element array [5 points]\" , points: 5 do\n      expect(sum_to_n?([0], 0)).to be false\n      expect(sum_to_n?([1], 1)).to be false\n      expect(sum_to_n?([-1], -1)).to be false\n      expect(sum_to_n?([-3], 0)).to be false\n    end\n    it \"returns false for an empty array [5 points]\" , points: 5 do\n      expect(sum_to_n?([], 0)).to be false\n      expect(sum_to_n?([], 7)).to be false\n    end\n  end\nend\n","undoManager":{"mark":55,"position":-1,"stack":[[{"start":{"row":30,"column":36},"end":{"row":30,"column":37},"action":"remove","lines":[" "],"id":58}],[{"start":{"row":30,"column":23},"end":{"row":30,"column":24},"action":"insert","lines":["f"],"id":58}],[{"start":{"row":30,"column":22},"end":{"row":30,"column":23},"action":"insert","lines":["s"],"id":59}],[{"start":{"row":30,"column":21},"end":{"row":30,"column":22},"action":"insert","lines":["d"],"id":60}],[{"start":{"row":30,"column":20},"end":{"row":30,"column":21},"action":"insert","lines":["f"],"id":61}],[{"start":{"row":30,"column":19},"end":{"row":30,"column":20},"action":"insert","lines":["s"],"id":62}],[{"start":{"row":30,"column":18},"end":{"row":30,"column":19},"action":"insert","lines":["d"],"id":63}],[{"start":{"row":30,"column":17},"end":{"row":30,"column":18},"action":"insert","lines":["f"],"id":64}],[{"start":{"row":30,"column":16},"end":{"row":30,"column":17},"action":"insert","lines":["s"],"id":65}],[{"start":{"row":30,"column":15},"end":{"row":30,"column":16},"action":"insert","lines":["d"],"id":66}],[{"start":{"row":30,"column":14},"end":{"row":30,"column":15},"action":"insert","lines":["f"],"id":67}],[{"start":{"row":30,"column":13},"end":{"row":30,"column":14},"action":"insert","lines":["s"],"id":68}],[{"start":{"row":30,"column":12},"end":{"row":30,"column":13},"action":"insert","lines":["d"],"id":69}],[{"start":{"row":30,"column":11},"end":{"row":30,"column":12},"action":"insert","lines":["f"],"id":70}],[{"start":{"row":30,"column":10},"end":{"row":30,"column":11},"action":"insert","lines":["s"],"id":71}],[{"start":{"row":30,"column":9},"end":{"row":30,"column":10},"action":"insert","lines":["d"],"id":72}],[{"start":{"row":30,"column":8},"end":{"row":30,"column":9},"action":"insert","lines":["f"],"id":73}],[{"start":{"row":30,"column":7},"end":{"row":30,"column":8},"action":"insert","lines":["\""],"id":74}],[{"start":{"row":30,"column":7},"end":{"row":30,"column":8},"action":"remove","lines":["'"],"id":75}],[{"start":{"row":30,"column":10},"end":{"row":30,"column":11},"action":"insert","lines":["\""],"id":76}],[{"start":{"row":30,"column":10},"end":{"row":30,"column":11},"action":"remove","lines":["'"],"id":77}],[{"start":{"row":32,"column":8},"end":{"row":32,"column":9},"action":"insert","lines":["d"],"id":78},{"start":{"row":32,"column":4},"end":{"row":32,"column":6},"action":"remove","lines":["  "]}],[{"start":{"row":32,"column":7},"end":{"row":32,"column":8},"action":"insert","lines":["n"],"id":79}],[{"start":{"row":32,"column":6},"end":{"row":32,"column":7},"action":"insert","lines":["e"],"id":80}],[{"start":{"row":31,"column":50},"end":{"row":32,"column":0},"action":"insert","lines":["",""],"id":81},{"start":{"row":32,"column":0},"end":{"row":32,"column":6},"action":"insert","lines":["      "]}],[{"start":{"row":31,"column":6},"end":{"row":31,"column":50},"action":"insert","lines":["expect(max_2_sum([1,-2,-3,-4,-5])).to eq(-1)"],"id":82}],[{"start":{"row":30,"column":27},"end":{"row":31,"column":0},"action":"insert","lines":["",""],"id":83},{"start":{"row":31,"column":0},"end":{"row":31,"column":6},"action":"insert","lines":["      "]}],[{"start":{"row":30,"column":25},"end":{"row":30,"column":27},"action":"remove","lines":["do"],"id":84},{"start":{"row":30,"column":25},"end":{"row":30,"column":27},"action":"insert","lines":["do"]}],[{"start":{"row":30,"column":26},"end":{"row":30,"column":27},"action":"insert","lines":["o"],"id":85}],[{"start":{"row":30,"column":25},"end":{"row":30,"column":26},"action":"insert","lines":["d"],"id":86}],[{"start":{"row":30,"column":24},"end":{"row":30,"column":25},"action":"insert","lines":[" "],"id":87}],[{"start":{"row":30,"column":23},"end":{"row":30,"column":24},"action":"insert","lines":["8"],"id":88}],[{"start":{"row":30,"column":22},"end":{"row":30,"column":23},"action":"insert","lines":[" "],"id":89}],[{"start":{"row":30,"column":21},"end":{"row":30,"column":22},"action":"insert","lines":[":"],"id":90}],[{"start":{"row":30,"column":20},"end":{"row":30,"column":21},"action":"insert","lines":[" "],"id":91}],[{"start":{"row":30,"column":19},"end":{"row":30,"column":20},"action":"insert","lines":["s"],"id":92}],[{"start":{"row":30,"column":18},"end":{"row":30,"column":19},"action":"insert","lines":["t"],"id":93}],[{"start":{"row":30,"column":17},"end":{"row":30,"column":18},"action":"insert","lines":["n"],"id":94}],[{"start":{"row":30,"column":16},"end":{"row":30,"column":17},"action":"insert","lines":["i"],"id":95}],[{"start":{"row":30,"column":15},"end":{"row":30,"column":16},"action":"insert","lines":["o"],"id":96}],[{"start":{"row":30,"column":14},"end":{"row":30,"column":15},"action":"insert","lines":["p"],"id":97}],[{"start":{"row":30,"column":13},"end":{"row":30,"column":14},"action":"insert","lines":[" "],"id":98}],[{"start":{"row":30,"column":12},"end":{"row":30,"column":13},"action":"insert","lines":[","],"id":99}],[{"start":{"row":30,"column":11},"end":{"row":30,"column":12},"action":"insert","lines":[" "],"id":100}],[{"start":{"row":30,"column":11},"end":{"row":30,"column":12},"action":"remove","lines":[","],"id":101}],[{"start":{"row":30,"column":12},"end":{"row":30,"column":13},"action":"remove","lines":[" "],"id":102}],[{"start":{"row":30,"column":12},"end":{"row":30,"column":13},"action":"insert","lines":[" "],"id":103}],[{"start":{"row":30,"column":11},"end":{"row":30,"column":12},"action":"insert","lines":[","],"id":104}],[{"start":{"row":30,"column":9},"end":{"row":30,"column":10},"action":"insert","lines":["o"],"id":105}],[{"start":{"row":30,"column":8},"end":{"row":30,"column":9},"action":"insert","lines":["h"],"id":106}],[{"start":{"row":30,"column":7},"end":{"row":30,"column":9},"action":"insert","lines":["''"],"id":107}],[{"start":{"row":30,"column":6},"end":{"row":30,"column":7},"action":"insert","lines":[" "],"id":108}],[{"start":{"row":30,"column":5},"end":{"row":30,"column":6},"action":"insert","lines":["t"],"id":109}],[{"start":{"row":30,"column":4},"end":{"row":30,"column":5},"action":"insert","lines":["i"],"id":110}],[{"start":{"row":29,"column":7},"end":{"row":30,"column":0},"action":"insert","lines":["",""],"id":111},{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":28,"column":6},"end":{"row":28,"column":7},"action":"insert","lines":["#"],"id":112}]]},"ace":{"folds":[],"scrolltop":961,"scrollleft":0,"selection":{"start":{"row":28,"column":6},"end":{"row":28,"column":6},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":47,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1486011501843}